/*
 * AUTOGENERATED FILE
 * from genInterpreter.js
 * DO NOT EDIT
 */
#include <stdlib.h>
#include <stdio.h>
#include <stdint.h>
#include <assert.h>
#include "interpreter.h"
#define sp u_stack

word_t u_run(uint8_t *ip) {
  word_t *h = u_heap;
  int i, j;
  for(;;) {
    assert(u_heap + u_heaptop < sp);
    switch(*ip++) {
      case QUIT:
        return 0;
      break;
      case HELLO:
        printf("Hello\n");
      break;
      case PUSH_INT:
        i = *ip++;
        *--sp = int_to_word(i);
      break;
      case LOG_INT:
        printf("LOG_INT %d\n", word_to_int(*sp));
      break;
      case POP:
        sp++;
      break;
      case ADD:
        ++sp;
        *sp = int_to_word(word_to_int(sp[-1]) + word_to_int(sp[0]));
      break;
    }
  }
}